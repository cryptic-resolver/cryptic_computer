[lvm]
name = "lvm"
desc = "Logical Volume Manager"

[lzw]
name = "LZW"
desc = "Lempel–Ziv–Welch compression algorithm"
more = "Published in 1984 as an improved implementation of the LZ78 algorithm published by Lempel and Ziv in 1978. It is the algorithm of the widely used Unix file compression utility compress and is used in the GIF image format."

[lisp]
name = "Lisp"
desc = "LISt Processor"
more = "A family of programming languages with a long history and a distinctive, fully parenthesized prefix notation. Originally specified in 1958."

[lcd]
name = "LCD"
desc = "Liquid-crystal Display "

[lsb]
name = "LSB"
desc = "Linux Standards Base"

[lop]
name = "LOP"
desc = "Language-oriented programming"

[led]
name = "LED"
desc = "Light-emitting Diode"
see = ["OLED"]

[lsp]
name = "LSP"
desc = "Language Server Protocol"

[ld]
name = "ld"
desc = "Link eDitor or Loader"
more = "or dynamic linker"

[ldd]
name = "ldd"
desc = "List Dynamic Dependencies"
more = """A shell script that executes the program given as argument, and shouldn't be used with untrusted binaries. The ldd manual page suggests to use the following command using the objdump and grep utilities as alternative:


  $ objdump -p /path/program | grep NEEDED
"""

[loc]
name = "loc"
desc = "Lines of Code"
same = "sloc"

[llvm]
name = "LLVM"
desc = "Low Level Virtual Machine"

[ldc]
name = "LDC"
desc = "LLVM-based D Compiler"
see = ["DMD", 'GDC']

[lto]
name = "LTO"
desc = "Link Time Optimization used by GCC"

[lvfs]
name = "LVFS"
desc = "Linux Vendor Firmware Service"

[lwip]
name = "lwIP"
desc = "lightweight IP"
more = "A widely used open-source TCP/IP stack designed for embedded systems"

[lml]
name = "LML"
desc = "Lightweight Markup Language"
more = "such as AsciiDoc, Markdown, Org-mode, MediaWiki, POD and so on"

[lttng]
name = "LTTng"
desc = "Linux Trace Toolkit: next generation"

[lalr]
name = "LALR"
desc = "Look Ahead Left-to-Right"
see = ['LL', 'LR']

[ll.parse]
name = "LL Parser"
desc = "Left to right, Leftmost derivation, top down parsers"
see = ['LR','LALR']

[lr.parse]
name = "LR Parser"
desc = "Left to right, Rightmost derivation, bottom up parsers"
see = ['LL','LALR']

[lru]
name = "LRU"
desc = "Least Recently Used cache"

[lz1]
name = "LZ1"
same = "LZ77=>lz77"

[lz2]
name = "LZ2"
same = "LZ78=>lz78"

[lz77]
name = "LZ77"
same = "LZ78=>lz78"

[lz78]
name = "LZ78"
desc = "Abraham Lempel & Jacob Ziv, 1978"
more = "LZ77 and LZ78 are the two lossless data compression algorithms published in papers by Abraham Lempel and Jacob Ziv in 1977 and 1978"

[lzma]
name = "LZMA"
desc = "Lempel–Ziv–Markov chain algorithm"

[lts]
name = "LTS"
desc = "Long-term Support"

[lex]
same = "Flex=>flex"

[lexer]
name = "Lexer or scanner"
desc = "lexical analyzer"
see = ['Lex']

[lwp]
name = "LWP"
desc = "Light-Weight Process"

[lwp.perl]
name = "LWP"
desc = "Library of WWW for Perl"
more = "https://metacpan.org/pod/LWP"


[lba]
name = "LBA"
desc = "Linear Bounded Automaton"

[l10n]
name = "L10n"
desc = """Localization
         ^^^^^^^^^^
          10 chars"""
see = ['i18n', 'm17n']

[ldap]
name = "LDAP"
desc = "Lightweight Directory Access Protocol"

[lldb]
name = "LLDB"
desc = "Debugger for LLVM"

[lsof]
name = "lsof"
desc = "list open files"

[ltrace]
name = "ltrace"
desc = "dynamic library calls tracer"
more = "Display dynamic library calls of a process"
see  = ['strace']

[lwn]
name = "LWN.net"
desc = "Linux Weekly News"

[lkml]
name = "LKML"
desc = "Linux kernel mailing list"

[lxc]
name = "LXC"
desc = "Linux Containers"
more = "An operating-system-level virtualization method for running multiple isolated Linux systems (containers) on a control host using a single Linux kernel"

[lsb.bit]
name = "LSB"
desc = "Least Significant Bit"
see = ['MSB']

[lf.ASCII]
name = "<LF>"
desc = "Line Feed"
more = "ASCII code 10"
see = 'CR'

[lmde]
name = "LMDE"
desc = "Linux Mint Debian Edition"

[lfs]
name = "LFS"
desc = "Git Large File Storage"

[llhd]
name = "LLHD"
desc = "Low Level Hardware Description"

[less]
name = "LeSS"
desc = "Large-scale Scrum"

[lzo]
name = "LZO"
desc = "Data compressor library file of Lempel–Ziv–Oberhum"

################################################
######             C Lib                  ######
################################################

[libalpm]
name = "libalpm"
desc = "Arch Linux Package Management"
more = "primarily used by pacman"

['libc++']
name = "libc++"
desc = "Implementations of the C++ standard library by LLVM"
see = ['libstdc++']

['libstdc++']
name = "libstdc++"
desc = "Implementations of the C++ standard library by GNU"
see = ['libc++']

[libdl]
name = "libdl"
desc = "dynamic linking library"

[libl]
name = "libl"
desc = "C lex library"
more = "eg: $(CC) -o parser y.tab.o lex.yy.o -ly -ll -lm"
see = ['Lex', 'liby']

[libm]
name = "libm"
desc = "C math library"
more = "usage: c99 [ flag... ] file... –lm [ library... ] "

[libnsl]
name = "libnsl"
desc = "network services library"

[librsvg]
name = "GNOME librsvg"
desc = "C library for rendering SVG"
more = "A small library to render Scalable Vector Graphics (SVG), associated with the GNOME Project. It renders SVG files to Cairo surfaces. Cairo is the 2D, antialiased drawing library that GNOME uses to draw things to the screen or to generate output for printing."


[libffi]
name = "libffi"
desc = "A portable foreign-function interface library"
more = """https://github.com/libffi/libffi
  https://sourceware.org/libffi
"""

[libgloss]
name = "libgloss"
desc = "A library for all the details that usually get glossed over"
more = "This library refers to things like startup code, and usually I/O support for gcc and C library. The C library used through out this manual is newlib. It's a free board support package BSP commonly used with GCC and G++ to produce a fully linked executable image for an embedded systems."

[libglib]
name = "libglib"
more = "Low-level core library that forms the basis for projects such as GTK+ and GNOME."

[libgda]
name = "libgda"
more = "GNU Data Access library."

[librt]
name = "librt"
desc = "POSIX.1b Realtime Extensions library"

[libsdl]
name = "libsdl"
same = 'SDL=>sdl'

[libev]
name = "libev"
desc = "EVent loop library (Only on Unixes)"
more = "loosely modelled after libevent, but without its limitations and bugs"
see = ['libuv']

[libuv]
name = "libuv"
desc = "Ultra fast eVent library"
more = "Cross-platform asynchronous I/O, which was originally written for Node.js, based on libev. In the node-v0.9.0 version of libuv, libev was removed"
see = ['libev']

[liby]
name = "liby"
desc = "C yacc library"
more = "eg: $(CC) -o parser y.tab.o lex.yy.o -ly -ll -lm"
see = ['Yacc', 'libl']


####################
#       X Lib      #
####################
[libgl]
name = "libGL"
desc = "Implements the GLX interface as well as the main OpenGL API entrypoints"

[libxext]
name = "X.org libXext"
desc = "Common X Extensions library"

[libxi]
name = "X.org libXi"
desc = "Client library for XInput."

[libfixes]
name = "X.org libXfixes"
desc = "X-Fixes extension"

[libxft]
name = "X.org libXft"
desc = "Client side font rendering library"

[libxrandr]
name = "X.org libXrandr"
desc = "X Resize and Rotate Extension Library"

[libsm]
name = "X.org libSM"
desc = "X Session Management Library"


################################################
######           End C Lib                ######
################################################


[lstm]
name = "LSTM"
desc = "Long short-term memory"
more = "An artificial neural network used in the fields of artificial intelligence and deep learning"

[lqr]
name = "LQR"
desc = "Linear–quadratic Regulator"

[lqg]
name = "LQG"
desc = "Linear–quadratic–Gaussian"

[lut]
name = "LUT"
desc = "Lookup Table"
more = "An array that replaces runtime computation with a simpler array indexing operation"

[lpc]
name = "LPC"
desc = "Low Pin Count bus"
more = "A computer bus used on IBM-compatible personal computers to connect low-bandwidth devices to the CPU, such as the BIOS ROM, but superseded by	SPI"

[lede]
name = "LEDE"
desc = "Linux Embedded Development Environment"

[ligma]
name = "LIGMA"
desc = "Libre Image and Graphics Manipulation Application"

[li.HTMLtag]
name = "HTML <li>"
desc = "List Item"

[lcc]
name = "LCC"
desc = "Little C Compiler"
more = "A small, retargetable compiler for the ANSI C programming language"

[lgpl]
name = "LGPL"
desc = "GNU Lesser General Public License"

[llm]
name = "LLM"
desc = "Large Language Model"
more = "A type of machine learning model that can perform a variety of natural language processing (NLP) tasks"

[lupdate]
name = "lupdate in Qt"
desc = "linguist update"
more = "It generates the first set of translation source (TS) files with all the user-visible text but no translations. Run lupdate later to incorporate any new text added to the application. lupdate synchronizes the user-visible text from the application with the translations."

[lrelease]
name = "lrelease in Qt"
desc = "linguist release"
more = "It reads the TS files and produce the QM files used by the application at runtime"
