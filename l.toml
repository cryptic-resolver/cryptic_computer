[lvm]
name = "lvm"
desc = "Logical Volume Manager"

[ls]
name = "ls"
desc = "list computer files"

[lzw]
name = "LZW"
desc = "Lempel–Ziv–Welch compression algorithm"
more = "Published in 1984 as an improved implementation of the LZ78 algorithm published by Lempel and Ziv in 1978. It is the algorithm of the widely used Unix file compression utility compress and is used in the GIF image format."

[lisp]
name = "Lisp"
desc = "LISt Processor"
more = "A family of programming languages with a long history and a distinctive, fully parenthesized prefix notation. Originally specified in 1958."

[lcd]
name = "LCD"
desc = "Liquid-crystal Display "

[lsb]
name = "LSB"
desc = "Linux Standards Base"

[lop]
name = "LOP"
desc = "Language-oriented programming"

[led]
name = "LED"
desc = "light-emitting Diode"
see = ["OLED"]

[lsp]
name = "LSP"
desc = "Language Server Protocol"

[ld]
name = "ld"
desc = "Link eDitor or Loader"
more = "or dynamic linker"

[ldd]
name = "ldd"
desc = "List Dynamic Dependencies"
more = """A shell script that executes the program given as argument, and shouldn't be used with untrusted binaries. The ldd manual page suggests to use the following command using the objdump and grep utilities as alternative:

  
  $ objdump -p /path/program | grep NEEDED
"""

[loc]
name = "loc"
desc = "Lines of Code"
same = "sloc"

[llvm]
name = "LLVM"
desc = "Low Level Virtual Machine"

[ldc]
name = "LDC"
desc = "LLVM-based D Compiler"

[lto]
name = "LTO"
desc = "Link Time Optimization used by GCC"

[lvfs]
name = "LVFS"
desc = "Linux Vendor Firmware Service"

[lwip]
name = "lwIP"
desc = "lightweight IP"
more = "A widely used open-source TCP/IP stack designed for embedded systems"

[lml]
name = "LML"
desc = "Lightweight Markup Language"
more = "such as AsciiDoc, Markdown, Org-mode, MediaWiki, POD and so on"

[lttng]
name = "LTTng"
desc = "Linux Trace Toolkit: next generation"

[lalr]
name = "LALR"
desc = "Look Ahead Left-to-Right"
see = ['LL', 'LR']

[ll.parse]
name = "LL Parser"
desc = "Left to right, Leftmost derivation, top down parsers"
see = ['LR','LALR']

[lr.parse]
name = "LR Parser"
desc = "Left to right, Rightmost derivation, bottom up parsers"
see = ['LL','LALR']

[lru]
name = "LRU"
desc = "Least Recently Used cache"

[lzma]
name = "LZMA"
desc = "Lempel–Ziv–Markov chain algorithm"

[lts]
name = "LTS"
desc = "Long-term Support"

[lex]
same = "Flex<=>flex"

[lexer]
name = "Lexer or scanner"
desc = "lexical analyzer"
see = ['Lex']

[lwp]
name = "LWP"
desc = "Light-Weight Process"

[lba]
name = "LBA"
desc = "Linear Bounded Automaton"

[l10n]
name = "L10n"
desc = """Localization
         ^^^^^^^^^^
          10 chars"""
see = ['i18n', 'm17n']

[ldap]
name = "LDAP"
desc = "Lightweight Directory Access Protocol"

[lldb]
name = "LLDB"
desc = "Debugger for LLVM"

[lsof]
name = "lsof"
desc = "list open files"

[ltrace]
name = "ltrace"
desc = "dynamic library calls tracer"
more = "Display dynamic library calls of a process"
see  = ['strace']

[lwn]
name = "LWN.net"
desc = "Linux Weekly News"

[lkml]
name = "LKML"
desc = "Linux kernel mailing list"

[lxc]
name = "LXC"
desc = "Linux Containers"
more = "An operating-system-level virtualization method for running multiple isolated Linux systems (containers) on a control host using a single Linux kernel"

[lsb.bit]
name = "LSB"
desc = "Least Significant Bit"
see = ['MSB']

[lf.ASCII]
name = "LF"
desc = "Line Feed"

[lmde]
name = "LMDE"
desc = "Linux Mint Debian Edition"

[lfs]
name = "LFS"
desc = "Git Large File Storage"

[llhd]
name = "LLHD"
desc = "Low Level Hardware Description"

################################################
######             C Lib                  ######
################################################

[libalpm]
name = "libalpm"
desc = "Arch Linux Package Management"
more = "primarily used by pacman"

['libc++']
name = "libc++"
desc = "Implementations of the C++ standard library by LLVM"
see = ['libstdc++']

['libstdc++']
name = "libstdc++"
desc = "Implementations of the C++ standard library by GNU"
see = ['libc++']

[libm]
name = "libm"
desc = "C math library"
more = "usage: c99 [ flag... ] file... –lm [ library... ] "

[libl]
name = "libl"
desc = "C lex library"
more = "eg: $(CC) -o parser y.tab.o lex.yy.o -ly -ll -lm"
see = ['Lex', 'liby']

[liby]
name = "liby"
desc = "C yacc library"
more = "eg: $(CC) -o parser y.tab.o lex.yy.o -ly -ll -lm"
see = ['Yacc', 'libl']

[libffi]
name = "libffi"
desc = "A portable foreign-function interface library"
more = """https://github.com/libffi/libffi
  https://sourceware.org/libffi
"""

[libuv]
name = "libuv"
desc = "Ultra fast eVent library"
more = "Cross-platform asynchronous I/O, which was originally written for Node.js, based on libev. In the node-v0.9.0 version of libuv, libev was removed"
see = ['libev']

[libev]
name = "libev"
desc = "EVent loop library (Only on Unixes)"
more = "loosely modelled after libevent, but without its limitations and bugs"
see = ['libuv']

[libdl]
name = "libdl"
desc = "dynamic linking library"

[libnsl]
name = "libnsl"
desc = "network services library"

[librt]
name = "librt"
desc = "POSIX.1b Realtime Extensions library"
